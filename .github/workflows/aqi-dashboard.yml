name: AQI Dashboard Deployment
on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  deploy-dashboard:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas plotly xgboost joblib streamlit scikit-learn

    # ✅ Find latest successful training run ID
    - name: Get latest training run ID
      id: get_run_id
      run: |
        run_id=$(gh run list --workflow "Train Model" --branch main --status success --limit 1 --json databaseId --jq '.[0].databaseId')
        echo "run_id=$run_id" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ github.token }}

    # ✅ Download model artifact from that run
    - name: Download model artifact
      run: |
        gh run download ${{ steps.get_run_id.outputs.run_id }} \
          --name aqi-model \
          --dir models
      env:
        GH_TOKEN: ${{ github.token }}

    # ✅ Build dashboard
    - name: Generate static dashboard HTML
      run: |
        mkdir -p public
        python scripts/dashboard_static.py

    # ✅ Correct upload for GitHub Pages
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: public

    # ✅ Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
