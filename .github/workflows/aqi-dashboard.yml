name: AQI Dashboard Deployment

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  deploy-dashboard:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas plotly xgboost joblib streamlit scikit-learn

    # ✅ Install GitHub CLI
    - name: Install GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    # 🔍 Get latest successful run ID from main branch
    - name: Get latest run ID
      id: get_run_id
      run: |
        run_id=$(gh run list --branch main --status success --limit 20 --json databaseId --jq '.[0].databaseId')
        echo "run_id=$run_id"
        echo "run_id=$run_id" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ github.token }}

    # 📥 Download the model artifact
    - name: Download model artifact
      run: |
        mkdir -p models
        gh run download ${{ steps.get_run_id.outputs.run_id }} \
          --name aqi-model \
          --dir models
      env:
        GH_TOKEN: ${{ github.token }}

    # 🖥 Generate static dashboard HTML
    - name: Generate static dashboard HTML
      run: |
        mkdir -p public
        python scripts/dashboard_static.py

    # 📤 Upload static site artifact
    - name: Upload static site artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: public

    # 🚀 Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
